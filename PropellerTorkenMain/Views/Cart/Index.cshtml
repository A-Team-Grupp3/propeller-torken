@model PropellerTorkenMain.Models.Cart
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{ ViewData["Title"] = "CartPage";
    Layout = "../Shared/_Layout.cshtml"; }
<link href="~/css/cart.css" rel="stylesheet" type="text/css">

<style>
    a {
        color: black;
    }
</style>

<div class="container">
    <div class="row">
        <div class="col" id="CartList">
            <div class="shopping-cart">
                <!-- Title -->
                <div class="title">
                    Shopping Bag
                </div>
                @if (Model.Products.Count == 0)
                {
    <div class="item"><p>The cart is empty</p></div>}
                <div>
                    @foreach (var item in Model.Products)
                    {
                        await Html.RenderPartialAsync("CartProductPartial", item);
                    }
                    <div align="right" style="padding: 20px; font-weight:bold;">
                        <p style="border:double">Total belopp: @Model.CartSum SEK</p>
                    </div>
                </div>
            </div>
        </div>

        <div class="customerinfo-cart" id="CustomerInfo">
            @{Html.BeginForm("Submit", "Cart");}
            <div align="center">
                <label>Återkommande kund? Skriv in ditt kundnummer här.</label><br />
                <input name="CustomerId" />
            </div>
            <div align="center">
                @Html.LabelFor(_ => _.Customer.Firstname, htmlAttributes: new { @class = "customerinfo-cart-label" })<br />
                @Html.TextBoxFor(m => m.Customer.Firstname)
            </div>
            <div align="center">
                @Html.LabelFor(_ => _.Customer.Lastname, htmlAttributes: new { @class = "customerinfo-cart-label" })<br />
                @Html.TextBoxFor(m => m.Customer.Lastname)
            </div>
            <div align="center">
                @Html.LabelFor(_ => _.Customer.Address, htmlAttributes: new { @class = "customerinfo-cart-label" })<br />
                @Html.TextBoxFor(m => m.Customer.Address)
            </div>
            <div align="center">
                @Html.LabelFor(_ => _.Customer.Zipcode, htmlAttributes: new { @class = "customerinfo-cart-label" })<br />
                @Html.TextBoxFor(m => m.Customer.Zipcode)
            </div>
            <div align="center">
                @Html.LabelFor(_ => _.Customer.City, htmlAttributes: new { @class = "customerinfo-cart-label" })<br />
                @Html.TextBoxFor(m => m.Customer.City)
            </div>
            <div align="center">
                @Html.LabelFor(_ => _.Customer.Email, htmlAttributes: new { @class = "customerinfo-cart-label" })<br />
                @Html.TextBoxFor(m => m.Customer.Email)
            </div>
            <div align="center">
                @Html.LabelFor(_ => _.Customer.PhoneNr, htmlAttributes: new { @class = "customerinfo-cart-label" })<br />
                @Html.TextBoxFor(m => m.Customer.PhoneNr)
            </div>
            <div class="d-flex justify-content-center">
                <button class="btn btn-success" type="submit">
                    <span id="confirm">Bekräfta</span>
                </button>
            </div>
            @{Html.EndForm(); }
        </div>
    </div>
</div>

<script>

    var button = document.getElementById("CustomerConfirmButton");

    // Disable the button on initial page load
    button.disabled = true;

    var boolFirstName = false;
    var boolLastName = false;
    var boolStreet = false;
    var boolZipCode = false;
    var boolCity = false;
    var boolPhoneNumber = false;
    var boolEmail = false;

    const firstName = document.getElementById("firstName");

    firstName.addEventListener("change", function () {
        if (firstName.validity.typeMismatch) {
            firstName.setCustomValidity("Fyll i förnamn!");
        }
        else {
            firstName.setCustomValidity("");
            boolFirstName = true;
        }
    });

    const lastName = document.getElementById("lastName");

    lastName.addEventListener("change", function () {
        if (lastName.validity.typeMismatch) {
            lastName.setCustomValidity("Fyll i efternamn!");
        }
        else {
            lastName.setCustomValidity("");
            boolLastName = true;
        }
    });

    const street = document.getElementById("street");

    street.addEventListener("change", function () {
        if (street.validity.typeMismatch) {
            street.setCustomValidity("Fyll i din gatuadress!");
        }
        else {
            street.setCustomValidity("");
            boolStreet = true;
        }
    });

    const zipCode = document.getElementById("zipCode");

    zipCode.addEventListener("change", function () {
        if (zipCode.validity.typeMismatch) {
            zipCode.setCustomValidity("Fyll i ditt postnummer!");
        }
        else {
            zipCode.setCustomValidity("");
            boolZipCode = true;
        }
    });

    const city = document.getElementById("city");

    city.addEventListener("change", function () {
        if (city.validity.typeMismatch) {
            city.setCustomValidity("Fyll i din postort!");
        }
        else {
            city.setCustomValidity("");
            boolCity = true;
        }
    });

    const phoneNumber = document.getElementById("phoneNumber");

    phoneNumber.addEventListener("change", function () {
        if (phoneNumber.validity.typeMismatch) {
            phoneNumber.setCustomValidity("Fyll i ditt telefonnummer!");
        }
        else {
            phoneNumber.setCustomValidity("");
            boolPhoneNumber = true;
        }
    });

    const email = document.getElementById("email");

    email.addEventListener("change", function () {
        if (email.validity.typeMismatch) {
            email.setCustomValidity("Fyll i din email-adress!");
        }
        else {
            email.setCustomValidity("");
            boolEmail = true;
            if (boolFirstName && boolLastName && boolStreet && boolZipCode && boolCity && boolPhoneNumber && boolEmail) {
                button.disabled = false;

            }

        }
    });
    function myFunction() {
        var popup = document.getElementById("myPopup");
        popup.style.display = "block";
        document.getElementById("confirm").textContent = "";
        popup.classList += "show";

    }
</script>

<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="~/js/NotifyOrder.js"></script>
<script src="~/js/ProductApiCall.js"></script>